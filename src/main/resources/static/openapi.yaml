openapi: 3.0.3
info:
  title: Swagger MailApp - OpenAPI 3.0
  description: |-
    Документация к сервису mail-service
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: delivery-status
    description: Всё о возможных статусах передвижения
  - name: mailing-category
    description: Всё о возможных категориях посылок
  - name: mailing
    description: Всё о посылках
  - name: post-office
    description: Всё о почтовых отделениях
paths:
  /delivery-statuses:
    get:
      tags:
        - delivery-status
      summary: Получить все возможные статусы передвижения
      operationId: getDeliveryStatuses
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/DeliveryStatusResponse'
  /mailing-categories:
    get:
      tags:
        - mailing-category
      summary: Получить все возможные категории посылок
      operationId: getMailingCategories
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/MailingCategoryResponse'
  /mailings:
    get:
      tags:
        - mailing
      summary: Получить посылки
      operationId: getMailings
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/sizeParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/PageResponse'
                            - properties:
                                content:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/MailingResponse'
    post:
      tags:
        - mailing
      summary: Добавить новую посылку
      operationId: addNewMailing
      requestBody:
        description: Информация о новой посылке
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewMailingRequest'
      responses:
        '201':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        $ref: '#/components/schemas/MailingResponse'
        '404':
          $ref: '#/components/responses/mailingCategoryDoesNotExist'
  /mailings/{mailing-id}:
    get:
      tags:
        - mailing
      summary: Получить посылку по ID
      operationId: getMailing
      parameters:
        - name: mailing-id
          in: path
          description: ID посылки
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        $ref: '#/components/schemas/MailingResponse'
        '404':
          $ref: '#/components/responses/mailingDoesNotExist'
  /mailings/{mailing-id}/statuses:
    get:
      tags:
        - mailing
      summary: Получить историю статусов посылки по её ID
      operationId: getMailingStatuses
      parameters:
        - name: mailing-id
          in: path
          description: ID посылки
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/PageResponse'
                            - properties:
                                content:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/MailingStatusResponse'
        '404':
          $ref: '#/components/responses/mailingDoesNotExist'
    post:
      tags:
        - mailing
      summary: Добавить новый статус посылки
      operationId: addNewMailingStatus
      parameters:
        - name: mailing-id
          in: path
          description: ID посылки
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Информация о новом статусе посылки
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewMailingStatusRequest'
      responses:
        '201':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        $ref: '#/components/schemas/MailingStatusResponse'
        '404':
          description: |
            Не удалось найти почтовое отправление по заданному ID <br>
            Не удалось найти почтовое отделение по заданному ID <br>
            Не удалось найти статус передвижения по заданному ID <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsuccessfulResponseBody'
  /post-offices:
    get:
      tags:
        - post-office
      summary: Получить почтовые отделения
      operationId: getPostOffices
      parameters:
        - $ref: '#/components/parameters/searchNameParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/sizeParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/PageResponse'
                            - properties:
                                content:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/PostOfficeResponse'
    post:
      tags:
        - post-office
      summary: Добавить новое почтовое отделение
      operationId: addNewPostOffice
      requestBody:
        description: Информация о новом почтовом отделении
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewPostOfficeRequest'
      responses:
        '201':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        $ref: '#/components/schemas/PostOfficeResponse'
        '409':
          description: Данное почтовое отделение уже есть в базе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsuccessfulResponseBody'
  /post-offices/{post-office-id}:
    get:
      tags:
        - post-office
      summary: Получить почтовое отделение по ID
      operationId: getPostOffice
      parameters:
        - name: post-office-id
          in: path
          description: ID почтового отделения
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessfulResponseBody'
                  - properties:
                      data:
                        $ref: '#/components/schemas/PostOfficeResponse'
        '404':
          $ref: '#/components/responses/postOfficeDoesNotExist'
components:
  schemas:
    ResponseBody:
      description: Тело ответа
      required:
        - success
      type: object
      properties:
        success:
          type: boolean
          description: Успех запроса
    SuccessfulResponseBody:
      description: Успешное тело ответа
      allOf:
        - $ref: '#/components/schemas/ResponseBody'
        - type: object
          properties:
            success:
              example: true
            data:
              type: object
              description: Возвращаемые данные
    ErrorBody:
      description: Тело ошибки
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке
          example: Что-то пошло не так
    UnsuccessfulResponseBody:
      description: Неуспешное тело ответа
      allOf:
        - $ref: '#/components/schemas/ResponseBody'
        - type: object
          required:
            - errors
          properties:
            success:
              example: false
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ErrorBody'
              description: Ошибки
    PageResponse:
      description: Тело страничного результата
      required:
        - totalNumberOfPages
        - totalNumberOfElements
        - size
        - number
        - numberOfElements
        - content
      type: object
      properties:
        totalNumberOfPages:
          type: integer
          format: int32
          example: 10
          description: Число страниц
        totalNumberOfElements:
          type: integer
          format: int64
          example: 100
          description: Число элементов
        size:
          type: integer
          format: int32
          example: 10
          description: Размер страницы
        number:
          type: integer
          format: int32
          example: 2
          description: Номер страницы
        numberOfElements:
          type: integer
          format: int32
          example: 10
          description: Число элементов на странице
        content:
          type: object
          description: Контент
    DeliveryStatusResponse:
      description: Статус передвижения
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          description: Название статуса
          example: Зарегистировано
    MailingCategoryResponse:
      description: Категория посылки
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          description: Название категории
          example: Бандероль
    MailingResponse:
      description: Почтовое отправление
      required:
        - id
        - mailingCategory
        - recipientName
        - recipientZipCode
        - recipientAddress
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: cf9d9bbd-9232-4ac7-be4a-b228c7153e97
        mailingCategory:
          $ref: '#/components/schemas/MailingCategoryResponse'
        recipientName:
          type: string
          description: Имя получателя
          example: Иванов Иван Иванович
        recipientZipCode:
          type: string
          pattern: "\\d{6}"
          description: Почтовый индекс получателя
          example: 630132
        recipientAddress:
          type: string
          description: Адрес получателя
          example: ул. Нарымская, 19
    MailingStatusResponse:
      description: Статус почтового отправления
      required:
        - id
        - postOffice
        - deliveryStatus
        - addedAt
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: cf9d9bbd-9232-4ac7-be4a-b228c7153e97
        postOffice:
          $ref: '#/components/schemas/PostOfficeResponse'
        deliveryStatus:
          $ref: '#/components/schemas/DeliveryStatusResponse'
        addedAt:
          type: string
          format: date-time
          description: Дата и время, когда был добавлен статус
          example: 2023-08-17T14:31:54.185233Z
    PostOfficeResponse:
      description: Почтовое отделение
      required:
        - id
        - name
        - zipCode
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: cf9d9bbd-9232-4ac7-be4a-b228c7153e97
        name:
          type: string
          description: Название отделения
          example: Отделение №105
        zipCode:
          type: string
          pattern: "\\d{6}"
          description: Почтовый индекс отделения
          example: 630105
    AddNewMailingRequest:
      description: Информация о новом почтовом отправлении
      required:
        - mailingCategoryId
        - recipientAddress
        - recipientName
        - recipientZipCode
      type: object
      properties:
        mailingCategoryId:
          type: integer
          format: int32
          description: ID категории посылки
          example: 1
        recipientName:
          type: string
          minLength: 1
          description: Имя получателя
          example: Петров Петр Петрович
        recipientZipCode:
          type: string
          pattern: "\\d{6}"
          description: Почтовый индекс получателя (6 цифр)
          example: 630015
        recipientAddress:
          type: string
          minLength: 1
          description: Адрес получателя
          example: ул. Проспект Дзержинского, 3
    AddNewMailingStatusRequest:
      description: Информация о новом статусе почтового отправления
      required:
        - postOfficeId
        - deliveryStatusId
      type: object
      properties:
        postOfficeId:
          type: string
          format: uuid
          description: ID почтового отделения
          example: cf9d9bbd-9232-4ac7-be4a-b228c7153e97
        deliveryStatusId:
          type: integer
          format: int32
          description: ID статуса передвижения
          example: 1
    AddNewPostOfficeRequest:
      description: Информация о новом почтовом отделении
      required:
        - name
        - zipCode
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Название почтового отделения
          example: Отделение №15
        zipCode:
          type: string
          pattern: "\\d{6}"
          description: Почтовый индекс отделения (6 цифр)
          example: 630015
  parameters:
    pageParam:
      in: query
      name: page
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
      required: false
      description: Номер страницы поиска
    sizeParam:
      in: query
      name: size
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 20
      required: false
      description: Размер страницы поиска
    sortParam:
      in: query
      name: sort
      schema:
        type: array
        items:
          type: string
          example: someField
      required: false
      description: Поля, участвующие в сортировке результата
    searchNameParam:
      in: query
      name: name
      schema:
        type: string
      required: false
      description: Значение для поиска по названию
  responses:
    mailingCategoryDoesNotExist:
      description: Не удалось найти категорию посылок по заданному ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnsuccessfulResponseBody'
    mailingDoesNotExist:
      description: Не удалось найти почтовое отправление по заданному ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnsuccessfulResponseBody'
    postOfficeDoesNotExist:
      description: Не удалось найти почтовое отделение по заданному ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnsuccessfulResponseBody'
    deliveryStatusDoesNotExist:
      description: Не удалось найти статус передвижения по заданному ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnsuccessfulResponseBody'